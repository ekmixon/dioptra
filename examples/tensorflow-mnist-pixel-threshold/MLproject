name: tensorflow-mnist-classifier

entry_points:
  mi:
    parameters:
      image_size: { type: string, default: "28,28,1" }
      data_dir: { type: path, default: "/nfs/data" }
      adv_tar_name: {type: string, default: "testing_adversarial_mi.tar.gz"}
      adv_data_dir: {type: string, default: "adv_testing"}
      model_name: {type: string, default: "mnist_le_net"}
      model_version: {type: int, default: 1}
      batch_size: {type: float, default: 32}
      classes: {type: int, default: 10}
      max_iter: {type: int, default: 10000}
      window_length: {type: int, default: 100}
      threshold: {type: float, default: 0.99}
      learning_rate: {type: float, default: 0.1}
      seed: {type: float, default: -1}
    command: >
      python src/mi.py
      --data-dir {data_dir}
      --image-size {image_size}
      --adv-tar-name {adv_tar_name}
      --adv-data-dir {adv_data_dir}
      --model-name {model_name}
      --model-version {model_version}
      --batch-size {batch_size}
      --max-iter {max_iter}
      --window-length {window_length}
      --threshold {threshold}
      --learning-rate {learning_rate}
      --seed {seed}

  train:
    parameters:
      data_dir: { type: path, default: "/nfs/data" }
      image_size: { type: string, default: "28,28,1" }
      model_architecture: { type: string, default: "le_net" }
      epochs: { type: float, default: 30 }
      batch_size: { type: float, default: 32 }
      register_model_name: { type: string, default: "" }
      learning_rate: { type: float, default: 0.001 }
      optimizer: { type: string, default: "Adam" }
      validation_split: { type: float, default: 0.2 }
      seed: { type: float, default: -1 }
    command: >
      python src/train.py
      --data-dir {data_dir}
      --image-size {image_size}
      --model-architecture {model_architecture}
      --epochs {epochs}
      --batch-size {batch_size}
      --register-model-name {register_model_name}
      --learning-rate {learning_rate}
      --optimizer {optimizer}
      --validation-split {validation_split}
      --seed {seed}
